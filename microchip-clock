#include <asf.h>
#include <stdio.h>


static struct usart_module s_cdc_uart_module;
static void configure_console(void)
{
	struct usart_config usart_conf;
	usart_get_config_defaults(&usart_conf);
	usart_conf.mux_setting = EDBG_CDC_SERCOM_MUX_SETTING;
	usart_conf.pinmux_pad0 = EDBG_CDC_SERCOM_PINMUX_PAD0;
	usart_conf.pinmux_pad1 = EDBG_CDC_SERCOM_PINMUX_PAD1;
	usart_conf.pinmux_pad2 = EDBG_CDC_SERCOM_PINMUX_PAD2;
	usart_conf.pinmux_pad3 = EDBG_CDC_SERCOM_PINMUX_PAD3;
	usart_conf.baudrate = 115200;
	stdio_serial_init(&s_cdc_uart_module, EDBG_CDC_MODULE, &usart_conf);
	usart_enable(&s_cdc_uart_module);
}

#define SYSCTRL_BASE_ADDR (volatile uint32_t *)0x40000800
#define SYSCTRL_INTFLAG_OFFSET 0x08
#define SYSCTRL_OSC8M_OFFSET 0x20
#define SYSCTRL_DFLLCTRL_OFFSET 0x24
#define SYSCTRL_DFLLVAL_OFFSET 0x28
#define SYSCTRL_DFLLMUL_OFFSET 0x2C
#define GCLK_BASE_ADDR (volatile uint32_t *)0x40000C00
#define GCLK_CTRL_OFFSET 0x00
#define GCLK_STATUS_OFFSET 0x01
#define GCLK_CLKCTRL_OFFSET 0x02
#define GCLK_GENCTRL_OFFSET 0x04
#define NVMCTRL_BASE_ADDR (volatile uint32_t *)0x41004000


int main (void)
{
	system_init();
	configure_console();
	printf("core clock = %d Hz\r\n", system_cpu_clock_get_hz());

	while (1)
	{
		/* Turn LED on. */
		port_pin_set_output_level(LED0_PIN, 0);
		delay_ms(500);
		/* Turn LED off. */
		port_pin_set_output_level(LED0_PIN, 1);
		delay_ms(500);
	}
}
